using SimpleProvider.Enumerators;

namespace SimpleProvider.Constants
{
    /// <summary>
    ///     Contains Standard CRUD - SQL Queries for use by the ORM
    ///     Does not contain any query information for the "WHERE" clause
    ///     "Where" clauses will be generated by the ORM at runtime
    /// </summary>
    internal static class Shared
    {
        #region Various Queries

        public const string CheckStoredProcedure =
            @"SELECT CASE when OBJECT_ID(@procName, 'P') IS NULL THEN 0 ELSE 1 end";

        #endregion

        #region MS-SQL, MYSQL, Post-Gres CRUD Operations

        public const string Select = @"select tab.* from {0}.{1} tab ";
        public const string Update = @"update {0}.{1} set ";
        public const string Delete = @"delete {0}.{1} ";
        public const string Insert = @"insert into {0}.{1} (";


        /// <summary>
        ///     Used in conjunction with Update, Insert and Delete
        /// </summary>
        public const string Field = "{0}.{1}, ";

        public const string ParamName = @"@V{0}";
        public const string Scope = "select Ident_Current('{0}.{1}')";

        #endregion

        #region Server Mapping

        public const string Databases = @"select name from sys.databases where database_id > 4";

        public const string Tables = @"SELECT name, object_id [ObjectId], 'table' [type], SCHEMA_NAME(t.schema_id) [Schema]
                                       FROM sys.tables t WHERE t.type = 'U' UNION
                                       SELECT v.name, v.object_id, 'view' [type], SCHEMA_NAME(v.schema_id) [Schema] FROM sys.views v
                                       ORDER BY name, object_id;";

        public const string TableColumns = @"SELECT DISTINCT
       tab.object_id [ObjectId],
       col.column_id [Id],
       col.name [Name],
       col.max_length [Size],
       col.is_nullable [Nullable],
       st.name [DataType],
       col.is_identity [Identity],
	   (case(select count(idx.column_id) from sys.index_columns idx where idx.object_id = @object_id and idx.column_id = col.column_id and 
	     exists( select is_primary_key from sys.indexes i where i.object_id = idx.object_id and i.index_id = idx.index_id and is_primary_key = 1)	   
	   ) when 0 then 0 else 1 end) PK,
	   (CASE (SELECT COUNT(constraint_object_id) FROM sys.foreign_key_columns WHERE parent_object_id = tab.object_id AND parent_column_id = col.column_id) WHEN 0 THEN 0 ELSE 1 END) [FK]
FROM sys.tables tab
    INNER JOIN sys.columns col
        ON tab.object_id = col.object_id
    INNER JOIN sys.types st
        ON st.user_type_id = col.user_type_id
    INNER JOIN sys.objects obj
        ON obj.object_id = tab.object_id
    LEFT OUTER JOIN sys.key_constraints kc
        ON kc.object_id = obj.object_id
    LEFT OUTER JOIN sys.foreign_keys fk 
        ON fk.object_id = obj.object_id AND fk.principal_id = tab.object_id
WHERE tab.object_id = @object_id";

        public const string ViewColumns = @"SELECT DISTINCT
       tab.object_id,
       col.column_id [Id],
       col.name [Name],
       col.max_length [Size],
       col.is_nullable [Nullable],
       st.name [DataType],
       col.is_identity [Identity],
	   (CASE (SELECT COUNT(constraint_object_id) FROM sys.foreign_key_columns WHERE parent_object_id = tab.object_id AND parent_column_id = col.column_id) WHEN 0 THEN 0 ELSE 1 END) [FK]
FROM sys.views tab
    INNER JOIN sys.columns col
        ON tab.object_id = col.object_id
    INNER JOIN sys.types st
        ON st.user_type_id = col.user_type_id
WHERE tab.object_id = @object_id";

        public const string TableRelations = @"SELECT ku.TABLE_NAME AS ParentTable, ku.COLUMN_NAME AS ParentColumn,
                                                      cu.TABLE_NAME AS ChildTable,  cu.COLUMN_NAME AS ChildColumn
                                               FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS c  INNER JOIN 
                                                    INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE cu ON cu.CONSTRAINT_NAME = c.CONSTRAINT_NAME INNER JOIN 
                                                    INFORMATION_SCHEMA.KEY_COLUMN_USAGE ku ON ku.CONSTRAINT_NAME = c.UNIQUE_CONSTRAINT_NAME
                                               WHERE ku.TABLE_NAME = @tabName;";

        public const string Indexes = @"SELECT DISTINCT ic.column_id
FROM sys.index_columns ic INNER JOIN 
     sys.all_columns ac ON ac.object_id = ic.object_id AND ac.column_id = ic.column_id
WHERE ic.object_id = @object_id
      AND EXISTS
(
    SELECT index_id
    FROM sys.indexes si
    WHERE is_primary_key = 1
          AND si.object_id = ic.object_id AND si.index_id = ic.index_id
)
ORDER BY ic.column_id;";

        #endregion

        #region Top Queries

        public const string SqlTop = @"select top({2}) tab.* from [{0}].[{1}] tab";
        public const string OracleTop = @"select tab.* from {0}.{1} where rownum < {2}";

        #endregion
    }
}